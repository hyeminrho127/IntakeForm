{"ast":null,"code":"var _jsxFileName = \"/Users/hyeminrho/Desktop/immigr8/IntakeForm/frontend/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport ProcessingInformation from './ProcessingInformation'; // Import the ProcessingInformation component\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const alienRegistrationInputRefs = useRef([]);\n  const arrivalDepartureInputRefs = useRef([]);\n  const [countryOfBirth, setCountryOfBirth] = useState('');\n  const [provinceOfBirth, setProvinceOfBirth] = useState('');\n  const [countryOfCitizenship, setCountryOfCitizenship] = useState('');\n  const [alienRegistrationNumber, setAlienRegistrationNumber] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [arrivalDepartureRecordNumber, setArrivalDepartureRecordNumber] = useState(['', '', '', '', '', '', '', '', '', '', '']);\n  const handleAlienRegistrationChange = (e, index) => {\n    const newValue = e.target.value;\n    const newRegistrationNumber = [...alienRegistrationNumber];\n    newRegistrationNumber[index] = newValue;\n    setAlienRegistrationNumber(newRegistrationNumber);\n\n    // Automatically focus on the next input field if not the last one\n    if (index < alienRegistrationInputRefs.current.length - 1 && newValue.length === 1) {\n      alienRegistrationInputRefs.current[index + 1].focus();\n    }\n  };\n  const handleArrivalDepartureChange = (e, index) => {\n    const newValue = e.target.value;\n\n    // Validate the input to allow only digits from 0 to 9\n    if (/^[0-9]$/.test(newValue)) {\n      const newDigit = [...arrivalDepartureRecordNumber];\n      newDigit[index] = newValue;\n      setArrivalDepartureRecordNumber(newDigit);\n\n      // Automatically focus on the next input field if not the last one\n      if (index < arrivalDepartureInputRefs.current.length - 1 && newValue.length === 1) {\n        arrivalDepartureInputRefs.current[index + 1].focus();\n      }\n    }\n  };\n  const handleNext = async () => {\n    try {\n      const formattedAlienRegistrationNumber = alienRegistrationNumber.join('');\n      // Send formattedAlienRegistrationNumber and formattedArrivalDepartureRecordNumber to the backend for processing\n      console.log(formattedAlienRegistrationNumber);\n      const countryOfBirthValue = countryOfBirth; // Access from state\n      const provinceOfBirthValue = provinceOfBirth; // Access from state\n      const countryOfCitizenshipValue = countryOfCitizenship; // Access from state\n\n      const formData = {\n        anum: formattedAlienRegistrationNumber,\n        country: countryOfBirth,\n        province: provinceOfBirth,\n        nationality: countryOfCitizenship\n      };\n      // Make the POST request to your backend API endpoint\n      const response = await axios.post('/beneficiary_info', formData);\n\n      // Check if the request was successful\n      if (response.status === 200) {\n        // Handle success, e.g., show a success message or redirect to a confirmation page\n        console.log('Form data saved successfully:', response.data);\n      } else {\n        // Handle other status codes or errors\n        console.error('Error:', response.data);\n      }\n    } catch (error) {\n      // Handle network errors or exceptions\n      console.error('An error occurred:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Immigration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNext,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"alienRegistrationNumber\",\n          children: \"Alien Registration Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alien-registration-number\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold',\n              marginRight: '5px'\n            },\n            children: \"A-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), alienRegistrationNumber.map((section, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: section,\n            onChange: e => handleAlienRegistrationChange(e, index),\n            maxLength: \"1\",\n            pattern: \"\\\\d\",\n            required: index === 0 // Require the first section\n            ,\n            style: {\n              width: '20px',\n              // Set the width for each digit input\n              marginRight: '5px',\n              // Add some spacing between digits\n              textAlign: 'center' // Center-align the digit\n            },\n\n            ref: el => alienRegistrationInputRefs.current[index] = el\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"countryOfBirth\",\n          children: \"Country of Birth:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"countryOfBirth\",\n          name: \"countryOfBirth\",\n          value: countryOfBirth // This sets the initial value from state\n          ,\n          onChange: e => setCountryOfBirth(e.target.value) // Update the state when the field value changes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"provinceOfBirth\",\n          children: \"Province of Birth:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"provinceOfBirth\",\n          name: \"provinceOfBirth\",\n          value: provinceOfBirth // This sets the initial value from state\n          ,\n          onChange: e => setProvinceOfBirth(e.target.value) // Update the state when the field value changes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"countryOfCitizenship\",\n          children: \"Country of Citizenship or Nationality:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"countryOfCitizenship\",\n          name: \"countryOfCitizenship\",\n          value: countryOfCitizenship // This sets the initial value from state\n          ,\n          onChange: e => setCountryOfCitizenship(e.target.value) // Update the state when the field value changes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'cornflowerblue',\n          color: 'white',\n          padding: '20px 40px',\n          fontSize: '20px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          marginTop: '20px' // Add spacing between the table and the button\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/processing\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/processing\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"MdigJS2OfYXZztua4UZxsNrpkjg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useRef","ProcessingInformation","Link","axios","jsxDEV","_jsxDEV","Form","_s","alienRegistrationInputRefs","arrivalDepartureInputRefs","countryOfBirth","setCountryOfBirth","provinceOfBirth","setProvinceOfBirth","countryOfCitizenship","setCountryOfCitizenship","alienRegistrationNumber","setAlienRegistrationNumber","arrivalDepartureRecordNumber","setArrivalDepartureRecordNumber","handleAlienRegistrationChange","e","index","newValue","target","value","newRegistrationNumber","current","length","focus","handleArrivalDepartureChange","test","newDigit","handleNext","formattedAlienRegistrationNumber","join","console","log","countryOfBirthValue","provinceOfBirthValue","countryOfCitizenshipValue","formData","anum","country","province","nationality","response","post","status","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","className","style","fontWeight","marginRight","map","section","type","onChange","maxLength","pattern","required","width","textAlign","ref","el","id","name","backgroundColor","color","padding","fontSize","border","borderRadius","cursor","marginTop","to","_c","$RefreshReg$"],"sources":["/Users/hyeminrho/Desktop/immigr8/IntakeForm/frontend/src/components/Form.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport ProcessingInformation from './ProcessingInformation'; // Import the ProcessingInformation component\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport axios from 'axios';\n\nfunction Form() {\n  const alienRegistrationInputRefs = useRef([]);\n  const arrivalDepartureInputRefs = useRef([]);\n  const [countryOfBirth, setCountryOfBirth] = useState('');\n  const [provinceOfBirth, setProvinceOfBirth] = useState('');\n  const [countryOfCitizenship, setCountryOfCitizenship] = useState('');\n\n\n  const [alienRegistrationNumber, setAlienRegistrationNumber] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [arrivalDepartureRecordNumber, setArrivalDepartureRecordNumber] = useState(['', '', '', '', '', '', '', '', '', '', '']);\n\n  const handleAlienRegistrationChange = (e, index) => {\n    const newValue = e.target.value;\n     const newRegistrationNumber = [...alienRegistrationNumber];\n      newRegistrationNumber[index] = newValue;\n      setAlienRegistrationNumber(newRegistrationNumber);\n\n      // Automatically focus on the next input field if not the last one\n      if (index < alienRegistrationInputRefs.current.length - 1 && newValue.length === 1) {\n        alienRegistrationInputRefs.current[index + 1].focus();\n      }\n  };\n\n  const handleArrivalDepartureChange = (e, index) => {\n    const newValue = e.target.value;\n\n    // Validate the input to allow only digits from 0 to 9\n    if (/^[0-9]$/.test(newValue)) {\n      const newDigit = [...arrivalDepartureRecordNumber];\n      newDigit[index] = newValue;\n      setArrivalDepartureRecordNumber(newDigit);\n\n      // Automatically focus on the next input field if not the last one\n      if (index < arrivalDepartureInputRefs.current.length - 1 && newValue.length === 1) {\n        arrivalDepartureInputRefs.current[index + 1].focus();\n      }\n    }\n  };\n\n\n\n  const handleNext = async () => {\n  try {\n    const formattedAlienRegistrationNumber = alienRegistrationNumber.join('');\n    // Send formattedAlienRegistrationNumber and formattedArrivalDepartureRecordNumber to the backend for processing\n    console.log(formattedAlienRegistrationNumber);\n    const countryOfBirthValue = countryOfBirth; // Access from state\n    const provinceOfBirthValue = provinceOfBirth; // Access from state\n    const countryOfCitizenshipValue = countryOfCitizenship; // Access from state\n\n    const formData = {\n      anum: formattedAlienRegistrationNumber,\n      country: countryOfBirth,\n      province: provinceOfBirth,\n      nationality: countryOfCitizenship,\n    };\n    // Make the POST request to your backend API endpoint\n    const response = await axios.post('/beneficiary_info', formData);\n\n    // Check if the request was successful\n    if (response.status === 200) {\n      // Handle success, e.g., show a success message or redirect to a confirmation page\n      console.log('Form data saved successfully:', response.data);\n    } else {\n      // Handle other status codes or errors\n      console.error('Error:', response.data);\n    }\n  } catch (error) {\n    // Handle network errors or exceptions\n    console.error('An error occurred:', error);\n  }\n};\n\n\n   return (\n    <div>\n      <h2>Immigration Form</h2>\n      <form onSubmit={handleNext}>\n        {/* Alien Registration Number */}\n        <div>\n          <label htmlFor=\"alienRegistrationNumber\">Alien Registration Number:</label>\n          <div className=\"alien-registration-number\">\n            <span style={{ fontWeight: 'bold', marginRight: '5px' }}>A-</span>\n            {alienRegistrationNumber.map((section, index) => (\n              <input\n                type=\"text\"\n                key={index}\n                value={section}\n                onChange={(e) => handleAlienRegistrationChange(e, index)}\n                maxLength=\"1\"\n                pattern=\"\\d\"\n                required={index === 0} // Require the first section\n                style={{\n                  width: '20px', // Set the width for each digit input\n                  marginRight: '5px', // Add some spacing between digits\n                  textAlign: 'center', // Center-align the digit\n                }}\n                ref={(el) => (alienRegistrationInputRefs.current[index] = el)}\n              />\n            ))}\n          </div>\n        </div>\n\n        {/* Country of Birth */}\n        <div>\n          <label htmlFor=\"countryOfBirth\">Country of Birth:</label>\n          <input\n              type=\"text\"\n              id=\"countryOfBirth\"\n              name=\"countryOfBirth\"\n              value={countryOfBirth} // This sets the initial value from state\n              onChange={(e) => setCountryOfBirth(e.target.value)} // Update the state when the field value changes\n            />\n        </div>\n\n        {/* Province of Birth */}\n        <div>\n          <label htmlFor=\"provinceOfBirth\">Province of Birth:</label>\n          <input\n            type=\"text\"\n            id=\"provinceOfBirth\"\n            name=\"provinceOfBirth\"\n            value={provinceOfBirth} // This sets the initial value from state\n            onChange={(e) => setProvinceOfBirth(e.target.value)} // Update the state when the field value changes\n                     />\n        </div>\n\n        {/* Country of Citizenship or Nationality */}\n        <div>\n          <label htmlFor=\"countryOfCitizenship\">Country of Citizenship or Nationality:</label>\n          <input\n            type=\"text\"\n            id=\"countryOfCitizenship\"\n            name=\"countryOfCitizenship\"\n            value={countryOfCitizenship} // This sets the initial value from state\n            onChange={(e) => setCountryOfCitizenship(e.target.value)} // Update the state when the field value changes\n                      />\n        </div>\n\n        <button\n        style={{\n          backgroundColor: 'cornflowerblue',\n          color: 'white',\n          padding: '20px 40px',\n          fontSize: '20px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          marginTop: '20px', // Add spacing between the table and the button\n        }}\n      >\n          <Link to=\"/processing\">Next</Link>\n      </button>     \n        <div>\n          <Link to=\"/processing\">Next</Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}